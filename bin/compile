#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

BUILD=$1
CACHE=$2

VERSION=4.8.0
NAME=heroku-buildpack-chicken
S3_BUCKET=$NAME

quietly() { $* > /dev/null; }

install_chicken() {
  echo "-----> Installing CHICKEN $1"
  mkdir -p $CACHE
  rm -rf $CACHE/*
  quietly pushd $CACHE
  curl -Ss $S3_BUCKET.s3.amazonaws.com/$NAME-$1.tar.gz | tar zx
  quietly popd
}

configure_environment() {
  mkdir -p $BUILD/.profile.d
  cat <<EOF > $BUILD/.profile.d/config.sh
#!/usr/bin/env bash
export PATH=/app/vendor/bin:/usr/local/bin:/usr/bin:/bin
export C_INCLUDE_PATH=/app/vendor/include:/app/vendor/include/chicken
export LD_LIBRARY_PATH=/app/vendor/lib:/app/vendor/lib/chicken/6
export CHICKEN_REPOSITORY=/app/vendor/lib/chicken/6
export CHICKEN_PREFIX=/app/vendor
EOF
  chmod +x $BUILD/.profile.d/config.sh
}

[ -f $CACHE/bin/chicken ] || install_chicken $VERSION

PATH=$CACHE/bin:$PATH
CHICKEN_PREFIX=$CACHE
CHICKEN_REPOSITORY=$CACHE/lib/chicken/6
LD_LIBRARY_PATH=$CACHE/lib:$CACHE/lib/chicken/6
C_INCLUDE_PATH=$CACHE/include:$CACHE/include/chicken

export PATH
export CHICKEN_PREFIX
export CHICKEN_REPOSITORY
export LD_LIBRARY_PATH
export C_INCLUDE_PATH

[ -f $BUILD/*.meta ] && {
  quietly pushd $BUILD
  name=$(basename $(ls *.meta | head -n1) .meta)
  version=$(csi -p "(cond ((assq 'chicken (read)) => cadr) (else \"\"))" < $name.meta)
  [ -z $version ] || [ "$(csi -release)" == "$version" ] || install_chicken $version
  [ -f $name.setup ] || touch $name.setup
  quietly popd
}

echo "-----> Installing eggs"
quietly pushd $BUILD
[ -f *.setup ] && chicken-install
quietly popd

echo "-----> Copying CHICKEN onto slug"
cp -R $CACHE $BUILD/vendor
configure_environment
